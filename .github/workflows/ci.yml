name: quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]          # ← если всё-таки создадите PR
  workflow_dispatch:          # ручной запуск

env:
  NX_SKIP_NX_CACHE: true      # упрощает CI-логи

jobs:
# ───────────────── build & test ──────────────────────────────────────────
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      # Lint + unit + e2e
      - name: Nx quality checks
        run: npx nx run-many -t lint,test,e2e --all --parallel=3

      # Production build (Next 14)
      - name: Nx production build
        run: npx nx build template-approuter

      # ───── CodeQL security scan ─────
      - name: CodeQL - init
        uses: github/codeql-action/init@v3
        with:
          languages: 'javascript-typescript'
      - name: CodeQL - analyze
        uses: github/codeql-action/analyze@v3

# ───────────────── deploy ────────────────────────────────────────────────
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v4
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token:       ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id:      ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id:  ${{ secrets.VERCEL_PROJECT_ID }}
          prod: true
          working-directory: .
          alias-domains: template-approuter.vercel.app

# ───────────────── auto-issue on failure ─────────────────────────────────
  open-issue-on-fail:
    needs: [build, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const title = `[CI] Build/Deploy failed – ${context.sha.slice(0,7)}`;
            const body  = `
**Run:** ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}

> Авто-создано пайплайном. Запустите \`/fix-build\` в Copilot Chat
или импортируйте Issue в Devika для автоматической починки.
`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title, body, labels: ['ci-failure']
            });
